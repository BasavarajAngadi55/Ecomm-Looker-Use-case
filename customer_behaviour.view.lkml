view: customer_behaviour {
  derived_table: {
    sql: SELECT
          user_id,
          COUNT(DISTINCT order_id) AS customer_lifetime_order,
          SUM(sale_price) AS customer_lifetime_revenue,
          CAST(MIN(created_at)  AS TIMESTAMP) AS first_order_date,
          CAST(MAX(created_at)  AS TIMESTAMP) AS latest_order_date
      FROM
          ${order_items.SQL_TABLE_NAME}
      GROUP BY
          user_id
     ;;
  }

  measure: count {
    type: count_distinct
    sql: ${user_id} ;;
  }

  dimension: user_id {
    primary_key: yes
    type: number
    sql: ${TABLE}.user_id ;;
  }

  dimension: customer_lifetime_order {
    type: number
    sql: ${TABLE}.customer_lifetime_order ;;
    drill_fields: [products.brand, products.category]
    description: "Number of orders placed by the customer over their lifetime."
  }
  dimension: customer_lifetime_order_group {
    type: tier
    tiers: [ 1, 2, 3, 6, 10, 20,30, 40, 50, 60]
    sql: ${customer_lifetime_order} ;;
    style: integer
    description: "Grouping of the number of lifetime orders into predefined ranges."
  }

  dimension: customer_lifetime_revenue {
    type: number
    sql: ${TABLE}.customer_lifetime_revenue ;;
    value_format_name: usd
    description: "Total revenue generated by the customer over their lifetime."
  }
  dimension: customer_lifetime_revenue_group {
    type: tier
    tiers: [5, 20, 50, 100, 500, 1000]
    sql: ${customer_lifetime_revenue} ;;
    style: integer
    value_format: "$#.00"
    description: "Grouping of the lifetime revenue into predefined ranges."
  }
  measure: total_lifetime_orders {
    type: sum
    sql: ${customer_lifetime_order} ;;
    description: "Total number of orders placed by the customer over their lifetime."
    drill_fields: [products.brand, products.category, products.item_name]
  }
  measure: average_lifetime_orders {
    type: average
    sql: ${customer_lifetime_order};;
    description: "Calculates the average number of orders placed by customers over their lifetime."
  }

  measure: total_lifetime_revenue {
    type: sum
    sql: ${customer_lifetime_revenue} ;;
    value_format_name: usd
    description: "Total revenue generated by customers over their lifetime, drilling down by user ID."
  }
  measure: average_lifetime_revenue {
    type: average
    sql: ${customer_lifetime_revenue} ;;
    description: "Calculates the average revenue generated by customers over their lifetime, drilling down by user ID."
    value_format_name: usd
  }

  dimension_group: first_order_date {
    type: time
    sql: ${TABLE}.first_order_date ;;
    description: "Date of the customer's first order."
  }

  dimension_group: latest_order_date {
    type: time
    sql: ${TABLE}.latest_order_date ;;
    description: "Date of the customer's latest order."
  }

  dimension: is_active {
    type: yesno
    sql: ${days_since_latest_order}<=90 ;;
    description: "Indicates whether the customer is currently active, based on recent orders within the last 90 days."
  }

  dimension_group: since_latest_order {
    type: duration
    intervals: [day, week, month, year]
    sql_start: ${order_items.created_raw} ;;
    sql_end: CURRENT_TIMESTAMP() ;;
    description: "Number of days since the customer's latest order."
  }
  measure: average_days_since_latest_order {
    type: average
    sql: ${days_since_latest_order} ;;
    description: "Calculates the average number of days since the customer's latest order."
    drill_fields: [products.category, users.traffic_source]
  }
  dimension: repeat_customer {
    type: yesno
    sql: ${customer_lifetime_order}>1 ;;
    description: "Indicates whether the customer is a repeat customer based on the order sequence."
  }

  dimension_group: since_signup {
    type: duration
    intervals: [day, week, month, year]
    sql_start: ${users.created_raw} ;;
    sql_end: CURRENT_TIMESTAMP() ;;
    description: "Measures the duration since users signed up."
  }
  dimension: days_since_signup_tier {
    type: tier
    tiers: [50, 100, 150, 200, 250, 300, 350, 400, 450, 500]
    sql: ${days_since_signup};;
    style: integer
    description: "Tier of days since signup, categorized into predefined ranges."
  }
  dimension: months_since_signup_tier {
    type: tier
    tiers: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    sql: ${months_since_signup} ;;
    style: integer
    description: "Tier of months since signup, categorized into predefined ranges."
  }
  measure: average_days_since_signup {
    type: average
    sql: ${days_since_signup} ;;
    description: "Calculates the average number of days since signup"
  }
  measure: average_months_since_signup {
    type: average
    sql: ${months_since_signup} ;;
    description: "Calculates the average number of months since signup."
  }
  measure: revenue_proportion {
    type: number
    sql: ${order_items.total_gross_revenue} / NULLIF(SUM(${order_items.total_gross_revenue}) OVER(), 0) ;;
    value_format_name: percent_2
    description: "Calculates the proportion of revenue contributed by each cohort."
  }
  measure: proportion_active_users {
    type: number
    sql: ${order_items.count} / ${users.count};;
    description: "Proportion of users that signed up X number of months ago and are still buying today."
  }

  measure: users_last_year_worth {
    type: sum
    sql:  ${customer_lifetime_revenue};;
    filters: {
      field: customer_behaviour.years_since_signup
      value: "1"
    }
    value_format_name: usd
    description: "Sum of sales revenue from users who signed up exactly one year ago, excluding canceled or returned orders."
  }
  measure: users_last_month_worth {
    type: sum
    sql: ${customer_lifetime_revenue};;
    filters: {
      field: customer_behaviour.months_since_signup
      value: "1"
    }
    value_format_name: usd
    description: "Sum of sales revenue from users who signed up exactly one month ago, excluding canceled or returned orders."
  }
  measure: proportion_of_users_buying{
    type: number
    sql: ${users.count}/NULLIF(SUM(${users.count}) OVER(), 0) ;;
    description: "Proportion of total users who have made a purchase."
    value_format_name: percent_2

  }

  set: detail {
    fields: [
      user_id,
      customer_lifetime_order,
      customer_lifetime_revenue,
      total_lifetime_orders,
      total_lifetime_revenue,
      first_order_date_time,
      latest_order_date_time,
    ]
  }
}
